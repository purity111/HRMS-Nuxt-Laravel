!function(e,s){"object"==typeof exports&&"undefined"!=typeof module?module.exports=s():"function"==typeof define&&define.amd?define(s):(e=e||self).VueGates=s()}(this,function(){"use strict";var t=function(e){return"".concat(e.charAt(0).toUpperCase()).concat(e.slice(1))},r=function(r){return function(e,s){if(s.value){if(!r.prototype.$gate.isSuperUser()){var n=function(e){var s="can"===e.name?"permission":e.name,n="has";return e.arg&&("unless"===e.arg?n="unless":"has"!==e.arg&&(n+=t(e.arg))),"hasAll"===n&&(s+="s"),"".concat(n).concat(t(s))}(s);r.prototype.$gate[n](s.value)||(!function(e){return 0===Object.keys(e).length}(s.modifiers)?Object.assign(e,s.modifiers):e.parentNode.removeChild(e))}}else console.error("You must specify a value in the directive.")}};return{install:function(o){var e=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},s=e.persistent&&process.browser,n={permissions:(s?JSON.parse(localStorage.getItem("permissions")):[])||[],roles:(s?JSON.parse(localStorage.getItem("roles")):[])||[],superRole:e.superRole};o.prototype.$gate={setPermissions:function(e){n.permissions=e,s&&localStorage.setItem("permissions",JSON.stringify(e))},setRoles:function(e){n.roles=e,s&&localStorage.setItem("roles",JSON.stringify(e))},getPermissions:function(){return n.permissions},getRoles:function(){return n.roles},isSuperUser:function(){return n.superRole&&n.roles.includes(n.superRole)},hasPermission:function(e){return n.permissions.includes(e)},unlessPermission:function(e){return!o.prototype.$gate.hasPermission(e)},hasAnyPermission:function(e){return e.split("|").some(function(e){return n.permissions.includes(e)})},hasAllPermissions:function(e){return e.split("|").every(function(e){return n.permissions.includes(e)})},hasRole:function(e){return n.roles.includes(e)},unlessRole:function(e){return!o.prototype.$gate.hasRole(e)},hasAnyRole:function(e){return e.split("|").some(function(e){return n.roles.includes(e)})},hasAllRoles:function(e){return e.split("|").every(function(e){return n.roles.includes(e)})}},o.directive("permission",{inserted:r(o)}),o.directive("can",{inserted:r(o)}),o.directive("role",{inserted:r(o)}),o.directive("role-or-permission",{inserted:function(e,s){if(s.value){var n=s.value.split("|"),r=n[0],t=n[1];o.prototype.$gate.hasRole(r)||o.prototype.$gate.hasPermission(t)||e.parentNode.removeChild(e)}else console.error("You must specify a value in the directive.")}})}}});
