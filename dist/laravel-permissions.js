!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(e=e||self).LaravelPermissions=n()}(this,function(){"use strict";var o=function(e){return"".concat(e.charAt(0).toUpperCase()).concat(e.slice(1))},e=function(i){return function(e,n){if(n.value){if(window.Laravel){var r=function(e){var n=e.name,r="has";return e.arg&&("unless"===e.arg?r="unless":"has"!==e.arg&&(r+=o(e.arg))),"hasAll"===r&&(n+="s"),"".concat(r).concat(o(n))}(n);i.prototype.$laravel[r](n.value)||(!function(e){return 0===Object.keys(e).length}(n.modifiers)?Object.assign(e,n.modifiers):e.parentNode.removeChild(e))}}else console.error("You must specify a value in the directive.")}};return{install:function(r){window.Laravel=function(o){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{},n=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(t).filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.forEach(function(e){var n,r,i;n=o,i=t[r=e],r in n?Object.defineProperty(n,r,{value:i,enumerable:!0,configurable:!0,writable:!0}):n[r]=i})}return o}({},window.Laravel,{permissions:[],roles:[]}),r.prototype.$laravel={setPermissions:function(e){window.Laravel.permissions=e},setRoles:function(e){window.Laravel.roles=e},getPermissions:function(){return window.Laravel.permissions},getRoles:function(){return window.Laravel.roles},hasPermission:function(e){return window.Laravel.permissions.includes(e)},unlessPermission:function(e){return!r.prototype.$laravel.hasPermission(e)},hasAnyPermission:function(e){return e.split("|").some(function(e){return window.Laravel.permissions.includes(e)})},hasAllPermissions:function(e){return e.split("|").every(function(e){return window.Laravel.permissions.includes(e)})},hasRole:function(e){return window.Laravel.roles.includes(e)},unlessRole:function(e){return!r.prototype.$laravel.hasRole(e)},hasAnyRole:function(e){return e.split("|").some(function(e){return window.Laravel.roles.includes(e)})},hasAllRoles:function(e){return e.split("|").every(function(e){return window.Laravel.roles.includes(e)})}},r.directive("permission",{inserted:e(r)}),r.directive("role",{inserted:e(r)}),r.directive("can",{inserted:function(e,n){r.prototype.$laravel.hasPermission(n.value)||e.parentNode.removeChild(e)}})}}});
